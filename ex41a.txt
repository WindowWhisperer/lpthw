Learning to speak OOP
class - tell python to make a new type of thing.
object - most basic type of thing and any instance of some thing
instance - what you get when you tell Python to create a class
def - how you define a punction inside a class
self - inside the functions in a class, self is avriable for the instance.object being accesses
inheritance - same concpt, class can inherit traits from another class
composition - class can be composed of other classes
attribute - property classes have that are from composition and are usually variables
is-a - a salmon is a fish - inherits attributes from another
has-a - a salmon has a mouth

class X(Y) Make a class named X that is-a y

class X(object): def__init__(self, J) class X has-a __init__ that takes self and J parameters

class X(object): def M(self, J) class X has-a function named M that takes self and J parameters

foo = X() Set foo to an instance of class X

foo.M(J) From foo, get the M function nd it call it with parameters self, has

foo.K = Q From foo get the K attribute and set it to Q

